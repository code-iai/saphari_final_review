<launch>
    
	<arg name="nodelet" default="false"/>

	<arg name="device_id1" default="#1" />
	<arg name="device_id2" default="#2" />

	<arg name="camera1" default="camera1" />
	<arg name="camera2" default="camera2" />

	<arg name="num_dev" default="1" />

	<node pkg="nodelet" type="nodelet" name="kinect_nodelet_manager"  args="manager" output="screen"/>

	<node pkg="nodelet" type="nodelet" name="KinectServerNodelet" args="load kinect_server/KinectServerNodelet 				kinect_nodelet_manager" output="screen">
	
    	<remap from="~output1" to="/camera/depth/image" />
    	<remap from="~output2" to="/camera2/depth/image" />

	<param name="device_id1" value="$(arg device_id1)" />
	<param name="device_id2" value="$(arg device_id2)" />
	<param name="camera1" value="$(arg camera1)" />
	<param name="camera2" value="$(arg camera2)" />
	<param name="num_dev" value="$(arg num_dev)" />
   	</node>  


	<node pkg="nodelet" type="nodelet" name="HumanTrackerNodelet" args="load human_tracker/HumanTrackerNodelet kinect_nodelet_manager" output="screen">
	<remap from="~input" to="camera/depth/image_filt" />
	<remap from="~contact_input" to="cooperation_points" />
    	<remap from="~output" to="used_image" />
	<remap from="~hands_positions" to="hands_positions" />
   	</node>


	<node pkg="nodelet" type="nodelet" name="realtime_urtf_filter_nodelet" args="load realtime_urdf_filter/RealtimeURDFFilterNodelet kinect_nodelet_manager" output="screen">
    	<remap from="~input_depth" to="camera/depth/image"/>
    	<remap from="~output_depth" to="camera/depth/image_filt" />
	<remap from="~hands_positions" to="hands_positions" />
	<remap from="~left_hand_out" to="left_hand_contact" />
	<remap from="~right_hand_out" to="right_hand_contact" />
	<remap from="~cooperation_points" to="cooperation_points" />
    	<rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
	<rosparam command="load" file="$(find kinect_server)/calibration_data/calibration.yaml"/>
  	</node> 


	<node name="senderLWR" pkg="sender" type="senderLWR" >
	<param name="use_sim_time" value="false" type="bool" />  <!-- set v-rep simulation time -->
	</node>              

  
	<!-- Load an example URDF -->
  	<param name="robot_description" command="$(find xacro)/xacro.py '$(find realtime_urdf_filter)/urdf/lwr.urdf.xml'"/>

  	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
    	<param name="tf_prefix" value=""/>
  	</node>

</launch>
